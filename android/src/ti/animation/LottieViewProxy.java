/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.animation;

import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;
import android.app.Activity;
import org.appcelerator.titanium.TiApplication;
import android.os.Message;
import org.appcelerator.kroll.common.TiMessenger;
import org.appcelerator.kroll.common.AsyncResult;

@Kroll.proxy(creatableInModule=TiAnimationModule.class, propertyAccessors = 
	{ "file", "scaleMode", "disableHardwareAcceleration", "mergePath", "update", "autoStart", 
	"loop", "assetFolder", "width", "height", "duration", "paused", "speed", "startFrame", "endFrame"})

public class LottieViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "LottieViewProxy";
	private static final boolean DBG = TiConfig.LOGD;

	protected static final int MSG_STARTANIMATION = KrollProxy.MSG_LAST_ID + 101;
	protected static final int MSG_LOADFILE = KrollProxy.MSG_LAST_ID + 102;
	protected static final int MSG_PAUSEANIMATION = KrollProxy.MSG_LAST_ID + 103;
	protected static final int MSG_RESUMEANIMATION = KrollProxy.MSG_LAST_ID + 104;
	protected static final int MSG_STOPANIMATION = KrollProxy.MSG_LAST_ID + 105;

	@Kroll.constant public static final int ANIMATION_START = 1;
	@Kroll.constant public static final int ANIMATION_END = 2;
	@Kroll.constant public static final int ANIMATION_CANCEL = 3;
	@Kroll.constant public static final int ANIMATION_REPEAT = 4;
	@Kroll.constant public static final int ANIMATION_RUNNING = 5;

	// Constructor
	public LottieViewProxy()
	{
		super();
		defaultValues.put("scaleMode", "center_inside");
		defaultValues.put("disableHardwareAcceleration", false);
		defaultValues.put("mergePath", false);
		defaultValues.put("autoStart", false);
		defaultValues.put("loop", false);
		defaultValues.put("assetFolder", "");
		defaultValues.put("speed", 1);
		defaultValues.put("startFrame", -1);
		defaultValues.put("endFrame", -1);
		defaultValues.put("duration", 0);
		defaultValues.put("file", "");
		defaultValues.put("paused", false);
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new LottieView(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}
	protected LottieView getView() {
		return (LottieView)getOrCreateView();
	}

	public boolean handleMessage(Message message) {
		AsyncResult result = null;
		switch (message.what) {
			case MSG_LOADFILE: {
				result = (AsyncResult)message.obj;
				getView().loadFile((String)result.getArg());
				result.setResult(null);
				return true;
			}
			case MSG_STARTANIMATION: {
				result = (AsyncResult)message.obj;
				int[] frames = (int[]) result.getArg();
				getView().startAnimation(frames[0], frames[1]);
				result.setResult(null);
				return true;
			}
			case MSG_PAUSEANIMATION: {
				getView().pauseAnimation();
				result.setResult(null);
				return true;
			}
			case MSG_RESUMEANIMATION: {
				getView().resumeAnimation();
				result.setResult(null);
				return true;
			}
			case MSG_STOPANIMATION: {
				getView().stopAnimation();
				result.setResult(null);
				return true;
			}
		}

		return super.handleMessage(message);
	}

	@Kroll.method
	public void start(@Kroll.argument(optional=true) int fromFrame, @Kroll.argument(optional=true) int endFrame) {
		if (TiApplication.isUIThread()) {
			getView().startAnimation(fromFrame, endFrame);
		} else {
			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_STARTANIMATION), new int[]{fromFrame, endFrame});
		}
	}

	@Kroll.method
	public void resume() {
		if (TiApplication.isUIThread()) {
			getView().resumeAnimation();
		} else {
			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_RESUMEANIMATION));
		}
	}

	@Kroll.method
	public void stop() {
		if (TiApplication.isUIThread()) {
			getView().stopAnimation();
		} else {
			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_STOPANIMATION));
		}
	}

	@Kroll.method
	public void pause() {
		if (TiApplication.isUIThread()) {
			getView().pauseAnimation();
		} else {
			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_PAUSEANIMATION));
		}
	}

	@Kroll.setProperty @Kroll.method
	public void setText(String layer, String text) {
		getView().setText(layer, text);
	}

	@Kroll.setProperty @Kroll.method
	public void setProgress(float val) {
		getView().setProgress(val);
	}

	@Kroll.getProperty @Kroll.method
	public float getProgress() {
		return getView().getProgress();
	}
}
